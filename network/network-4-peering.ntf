
resource "azurerm_resource_group" "rg" {
  name = "rg-weu"
  location = "northeurope"
  tags = {
    createdBy = "terraform"
  }
}

// https://docs.microsoft.com/en-us/learn/modules/integrate-vnets-with-vnet-peering/

//Sales in north europe
resource "azurerm_virtual_network" "SalesVNet" {
  name = "SalesVNet"
  location = azurerm_resource_group.rg.location
  resource_group_name = azurerm_resource_group.rg.name
  address_space = [
    "10.1.0.0/16"]
}

resource "azurerm_subnet" "SalesApps" {
  name = "Apps"
  resource_group_name = azurerm_resource_group.rg.name
  virtual_network_name = azurerm_virtual_network.SalesVNet.name
  address_prefixes = [
    "10.1.1.0/24"]
}

resource "azurerm_public_ip" "Sales" {
  name = "SalesIp"
  resource_group_name = azurerm_resource_group.rg.name
  location = azurerm_resource_group.rg.location
  allocation_method = "Dynamic"
}

resource "azurerm_network_interface" "Sales" {
  name                = "SalesVMVMNic"
  location            = azurerm_resource_group.rg.location
  resource_group_name = azurerm_resource_group.rg.name

  ip_configuration {
    name                          = "internal"
    subnet_id                     = azurerm_subnet.SalesApps.id
    private_ip_address_allocation = "Dynamic"
    public_ip_address_id = azurerm_public_ip.Sales.id
  }
}

resource "azurerm_linux_virtual_machine" "Sales" {
  name                = "SalesVm"
  resource_group_name = azurerm_resource_group.rg.name
  location            = azurerm_resource_group.rg.location
  size                = "Standard_F2"
  admin_username      = "adminuser"

  network_interface_ids = [
    azurerm_network_interface.Sales.id,
  ]

  admin_ssh_key {
    username   = "adminuser"
    public_key = file("~/.ssh/id_rsa.pub")
  }

  os_disk {
    caching              = "ReadWrite"
    storage_account_type = "Standard_LRS"
  }

  source_image_reference {
    publisher = "Canonical"
    offer     = "UbuntuServer"
    sku       = "16.04-LTS"
    version   = "latest"
  }
}

//Marketing in north europe
resource "azurerm_virtual_network" "MarketingVNet" {
  name = "MarketingVNet"
  location = azurerm_resource_group.rg.location
  resource_group_name = azurerm_resource_group.rg.name
  address_space = [
    "10.2.0.0/16"]
}

resource "azurerm_subnet" "MarketingApps" {
  name = "Apps"
  resource_group_name = azurerm_resource_group.rg.name
  virtual_network_name = azurerm_virtual_network.MarketingVNet.name
  address_prefixes = [
    "10.2.1.0/24"]
}

resource "azurerm_public_ip" "Marketing" {
  name = "MarketingIp"
  resource_group_name = azurerm_resource_group.rg.name
  location = azurerm_resource_group.rg.location
  allocation_method = "Dynamic"
}

resource "azurerm_network_interface" "Marketing" {
  name                = "MarketingVmNic"
  location            = azurerm_resource_group.rg.location
  resource_group_name = azurerm_resource_group.rg.name

  ip_configuration {
    name                          = "internal"
    subnet_id                     = azurerm_subnet.MarketingApps.id
    private_ip_address_allocation = "Dynamic"
    public_ip_address_id = azurerm_public_ip.Marketing.id
  }
}

resource "azurerm_linux_virtual_machine" "Marketing" {
  name                = "MarketingVm"
  resource_group_name = azurerm_resource_group.rg.name
  location            = azurerm_resource_group.rg.location
  size                = "Standard_F2"
  admin_username      = "adminuser"

  network_interface_ids = [
    azurerm_network_interface.Marketing.id,
  ]

  admin_ssh_key {
    username   = "adminuser"
    public_key = file("~/.ssh/id_rsa.pub")
  }

  os_disk {
    caching              = "ReadWrite"
    storage_account_type = "Standard_LRS"
  }

  source_image_reference {
    publisher = "Canonical"
    offer     = "UbuntuServer"
    sku       = "16.04-LTS"
    version   = "latest"
  }
}


//Research in west europe
resource "azurerm_virtual_network" "ResearchVNet" {
  name = "ResearchVNet"
  location = "westeurope"
  resource_group_name = azurerm_resource_group.rg.name
  address_space = [
    "10.3.0.0/16"]
}

resource "azurerm_subnet" "ResearchApps" {
  name = "Apps"
  resource_group_name = azurerm_resource_group.rg.name
  virtual_network_name = azurerm_virtual_network.ResearchVNet.name
  address_prefixes = [
    "10.3.1.0/24"]
}

resource "azurerm_public_ip" "Research" {
  name = "ResearchIp"
  resource_group_name = azurerm_resource_group.rg.name
  location = "westeurope"
  allocation_method = "Dynamic"
}

resource "azurerm_network_interface" "Research" {
  name                = "ResearchVmNic"
  location            = "westeurope"
  resource_group_name = azurerm_resource_group.rg.name

  ip_configuration {
    name                          = "internal"
    subnet_id                     = azurerm_subnet.ResearchApps.id
    private_ip_address_allocation = "Dynamic"
    public_ip_address_id = azurerm_public_ip.Research.id
  }
}

resource "azurerm_linux_virtual_machine" "Research" {
  name                = "ResearchVm"
  resource_group_name = azurerm_resource_group.rg.name
  location            = "westeurope"
  size                = "Standard_F2"
  admin_username      = "adminuser"

  network_interface_ids = [
    azurerm_network_interface.Research.id,
  ]

  admin_ssh_key {
    username   = "adminuser"
    public_key = file("~/.ssh/id_rsa.pub")
  }

  os_disk {
    caching              = "ReadWrite"
    storage_account_type = "Standard_LRS"
  }

  source_image_reference {
    publisher = "Canonical"
    offer     = "UbuntuServer"
    sku       = "16.04-LTS"
    version   = "latest"
  }
}


// Peering

resource "azurerm_virtual_network_peering" "MarketingVNet-To-SalesVNet" {
  name = "MarketingVNet-To-SalesVNet"
  resource_group_name = azurerm_resource_group.rg.name
  virtual_network_name = azurerm_virtual_network.MarketingVNet.name
  remote_virtual_network_id = azurerm_virtual_network.SalesVNet.id
  allow_virtual_network_access = true
}

resource "azurerm_virtual_network_peering" "SalesVNet-To-MarketingVNet" {
  name = "SalesVNet-To-MarketingVNet"
  resource_group_name = azurerm_resource_group.rg.name
  virtual_network_name = azurerm_virtual_network.SalesVNet.name
  remote_virtual_network_id = azurerm_virtual_network.MarketingVNet.id
  allow_virtual_network_access = true
}

resource "azurerm_virtual_network_peering" "Reasearch-To-MarketingVNet" {
  name = "Reasearch-To-MarketingVNet"
  resource_group_name = azurerm_resource_group.rg.name
  virtual_network_name = azurerm_virtual_network.ResearchVNet.name
  remote_virtual_network_id = azurerm_virtual_network.MarketingVNet.id
  allow_virtual_network_access = true
}

resource "azurerm_virtual_network_peering" "MarketingVNet-To-Reasearch" {
  name = "MarketingVNet-To-Reasearch"
  resource_group_name = azurerm_resource_group.rg.name
  virtual_network_name = azurerm_virtual_network.MarketingVNet.name
  remote_virtual_network_id = azurerm_virtual_network.ResearchVNet.id
  allow_virtual_network_access = true
}

// Output

output "sales-public-ip" {
  value = azurerm_public_ip.Sales.ip_address
}

output "sales-private-ip" {
  value = azurerm_network_interface.Sales.ip_configuration[0].private_ip_address
}

output "marketing-public-ip" {
  value = azurerm_public_ip.Marketing.ip_address
}

output "marketing-private-ip" {
  value = azurerm_network_interface.Marketing.ip_configuration[0].private_ip_address
}

output "research-public-ip" {
  value = azurerm_public_ip.Research.ip_address
}

output "research-private-ip" {
  value = azurerm_network_interface.Research.ip_configuration[0].private_ip_address
}
