
resource "azurerm_resource_group" "rg-testvm" {
  name = "test-vm-rg-weu"
  location = "West Europe"
}

// attached NIC, VN, VM must have same location and subscription!!!
// you can play here and test

resource "azurerm_virtual_network" "vn" {
  name = "vn"
  location = azurerm_resource_group.rg-testvm.location

  resource_group_name = azurerm_resource_group.rg-testvm.name
  address_space = [
    "192.168.0.0/16"]
}

resource "azurerm_subnet" "subnet" {
  name = "subnet"
  resource_group_name = azurerm_resource_group.rg-testvm.name
  virtual_network_name = azurerm_virtual_network.vn.name
  address_prefixes = [
    "192.168.1.0/24"]
}

resource "azurerm_public_ip" "pip" {
  name = "pip"
  resource_group_name = azurerm_resource_group.rg-testvm.name
  location = azurerm_resource_group.rg-testvm.location
  allocation_method = "Static"
}

resource "azurerm_network_interface" "nic" {
  name                = "nic"

  location            = azurerm_resource_group.rg-testvm.location
  resource_group_name = azurerm_resource_group.rg-testvm.name

  enable_ip_forwarding = true

  ip_configuration {
    name                          = "internal"
    subnet_id                     = azurerm_subnet.subnet.id
    private_ip_address_allocation = "Dynamic"
    public_ip_address_id = azurerm_public_ip.pip.id
  }
}

resource "azurerm_linux_virtual_machine" "vm" {
  name                = "test-vm"
  resource_group_name = azurerm_resource_group.rg-testvm.name

  location            = azurerm_resource_group.rg-testvm.location
  size                = "Basic_A1"
  admin_username      = "adminuser"
  custom_data = filebase64("${path.module}/scripts/vm-scale-set/cloud-init.yml")

//  delete_os_disk_on_termination    = true
//  delete_data_disks_on_termination = true

  network_interface_ids = [
    azurerm_network_interface.nic.id,
  ]

  admin_ssh_key {
    username   = "adminuser"
    public_key = file("~/.ssh/id_rsa.pub")
  }

  os_disk {
    caching              = "ReadWrite"
    storage_account_type = "Standard_LRS"
  }

  source_image_reference {
    publisher = "Canonical"
    offer     = "UbuntuServer"
    sku       = "18.04-LTS"
    version   = "latest"
  }

}

